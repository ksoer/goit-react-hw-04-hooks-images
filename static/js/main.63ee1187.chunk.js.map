{"version":3,"sources":["components/styles.module.css","components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","services/fetchDataApi.js","App.js","index.js"],"names":["module","exports","Searchbar","onHandleSubmit","useState","query","setQuery","className","st","SearchForm","onSubmit","e","preventDefault","trim","toast","info","type","SearchForm_button","SearchForm_button_label","SearchForm_input","value","autoComplete","autoFocus","placeholder","onChange","target","Preloader","Button","color","height","width","rootModal","document","querySelector","Modal","largeImageURL","onToggleModal","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","Overlay","onClick","currentTarget","src","alt","ImageGalleryItem","webformatURL","tags","onOpenModal","ImageGalleryItem_image","ImageGallery","images","map","id","img","LoadMore","onLoadMore","fetchDataApi","page","a","axios","get","data","hits","App","setImages","setLargeImageURL","setPage","error","setError","isLoading","setIsLoading","showModal","setShowModal","request","length","prevImages","fetchImages","toggleModal","scrollPage","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","newSearch","message","dataset","source","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63ee1187.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__1pcbY\",\"Searchbar\":\"styles_Searchbar__1fJhm\",\"SearchForm\":\"styles_SearchForm__MRmRc\",\"SearchForm_button\":\"styles_SearchForm_button__2YJEX\",\"SearchForm_button_label\":\"styles_SearchForm_button_label__NUEwk\",\"SearchForm_input\":\"styles_SearchForm_input__4omoW\",\"ImageGallery\":\"styles_ImageGallery__1w_Tt\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__3b6XK\",\"ImageGalleryItem_image\":\"styles_ImageGalleryItem_image__2zjVg\",\"Overlay\":\"styles_Overlay__ghnOf\",\"Modal\":\"styles_Modal__iPA99\",\"Button\":\"styles_Button__3tQZY\"};","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\nimport st from '../styles.module.css';\r\n\r\nfunction Searchbar({ onHandleSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (query.trim() === '') {\r\n      return toast.info('ðŸ˜± Please enter a value for search images!');\r\n    }\r\n    onHandleSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n \r\n    return (\r\n      <header className={st.Searchbar}>\r\n        <form className={st.SearchForm} onSubmit={onSubmit}>\r\n          <button type=\"submit\" className={st.SearchForm_button}>\r\n            <span className={st.SearchForm_button_label}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={st.SearchForm_input}\r\n            type=\"text\"\r\n            value={query}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={({ target }) => setQuery(target.value)}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n\r\nSearchbar.propTypes = {\r\n  onHandleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import Loader from 'react-loader-spinner';\r\nimport st from '../styles.module.css';\r\n\r\nexport default function Preloader() {\r\n  return (\r\n    <div className={st.Button}>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n}","  \r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport st from '../styles.module.css';\r\n\r\nconst rootModal = document.querySelector('#rootModal');\r\n\r\nfunction Modal({ largeImageURL, onToggleModal }) {\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onToggleModal();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onToggleModal]);\r\n\r\n const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onToggleModal();\r\n    }\r\n  };\r\n\r\n    return createPortal(\r\n      <div className={st.Overlay} onClick={handleBackdropClick}>\r\n        <div className={st.Modal}> \r\n          <img src={largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      rootModal,\r\n    );\r\n  }\r\n\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default Modal;","import PropTypes from 'prop-types';\r\n\r\nimport st from '../styles.module.css';\r\n\r\nfunction ImageGalleryItem({ webformatURL, largeImageURL, tags,  onOpenModal }) {\r\n  return (\r\n    <li className={st.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-source={largeImageURL}\r\n        className={st.ImageGalleryItem_image}\r\n        onClick={onOpenModal}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import st from '../styles.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className={st.ImageGallery}>\r\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          className={st.img}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          onOpenModal={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n  onOpenPicture: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;","import st from '../styles.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function LoadMore({ onLoadMore }) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <button className={st.Button} type=\"button\" onClick={onLoadMore}>\r\n        Load More\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nLoadMore.propTypes = {\r\n  onLoadMore: PropTypes.func,\r\n};","import axios from 'axios';\r\n\r\nconst fetchDataApi = async (query, page) => {\r\n  const { data } = await axios.get(\r\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=18963132-a5d8582da162d4c0f5ee62384&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  return data.hits;\r\n};\r\n\r\nexport default fetchDataApi;","\nimport { useState, useEffect } from 'react';\n\nimport st from './components/styles.module.css';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button'\n\nimport fetchDataApi from './services/fetchDataApi';\n\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!query) return;\n    const fetchImages = async () => {\n      try {\n        const request = await fetchDataApi(query, page);\n        if (request.length === 0) {\n          return setError(`No results were found for ${query}!`);\n        }\n       setImages(prevImages => [...prevImages, ...request]);\n      } catch (error)\n      {\n        setError('Something went wrong. Try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchImages();\n  }, [page, query]);\n\nconst searchImages = newSearch => {\n    setQuery(newSearch);\n    setImages([]);\n    setPage(1);\n    setError(null);\n    setIsLoading(true);\n  };\n\nconst onLoadMore = () => {\n    setIsLoading(true);\n    setPage(prevPage => prevPage + 1);\n    scrollPage();\n  };\n\n  const onOpenModal = e => {\n    setLargeImageURL(e.target.dataset.source);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 160,\n        behavior: 'smooth',\n      });\n    }, 800);\n  };\n\n\n return (\n      <div className={st.App}>\n        <Searchbar  onHandleSubmit={searchImages} />\n\n        {error && <p>{error.message}</p>}\n\n        {images.length > 0 && (\n          <ImageGallery\n            images={images}\n            onOpenModal={onOpenModal}\n          />\n        )}\n\n        {isLoading && <Loader />}\n\n         {!isLoading && images.length >= 12 && !error && (\n        <Button onLoadMore={onLoadMore} />\n      )}\n\n        {showModal && (\n          <Modal onToggleModal={toggleModal} largeImageURL={largeImageURL}>\n            \n          </Modal>\n        )}\n      </div>\n    );\n}\n\nexport default App;\n\n\n// export class App extends Component {\n//   state = {\n//     gallery: [],\n//     searchQuery: '',\n//     page: 1,\n//     showModal: false,\n//     showLoader: false,\n//     error: null,\n//     largeImage: {},\n//     total: 0,\n//   };\n\n//   componentDidMount() {\n//     this.setState({ showLoader: true });\n//     this.fetchGallary();\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevQuery = prevState.searchQuery;\n//     const naxtQuery = this.state.searchQuery;\n//     if (prevQuery !== naxtQuery) {\n//       this.fetchGallary();\n//     }\n//   }\n\n//   fetchGallary = () => {\n//     const { searchQuery, page } = this.state;\n//     this.setState({ showLoader: true });\n\n//     fetchDataApi(searchQuery, page)\n//       .then(({ hits, total }) => {\n//         this.setState(prevState => ({\n//           gallery: [...prevState.gallery, ...hits],\n//           page: prevState.page + 1,\n//           total,\n//         }));\n//         this.scrollToDown();\n//       })\n//       .catch(error => this.setState({ error }))\n//       .finally(() => this.setState({ showLoader: false }));\n//   };\n\n//   scrollToDown = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   handleFormSubmit = searchQuery => {\n//     if (this.state.searchQuery === searchQuery) {\n//       return;\n//     }\n//     this.setState({ searchQuery, gallery: [], page: 1 });\n//   };\n\n//   toggleModal = () => {\n//     this.setState(prevState => ({\n//       showModal: !prevState.showModal,\n//     }));\n//   };\n\n//   handleOpenPicture = largeImage => {\n//     this.setState({ largeImage });\n//     this.toggleModal();\n//   };\n\n//   showLoadMore = () => {\n//     const { total, page } = this.state;\n//     return Math.ceil(total / 12) !== page - 1;\n//   };\n\n//   render() {\n//     const { error, showLoader, showModal, gallery, largeImage } = this.state;\n//     const showLoadMore = this.showLoadMore();\n//     return (\n//       <div className={st.App}>\n//         <Searchbar onSubmit={this.handleFormSubmit} />\n\n//         {error && <p>{error.message}</p>}\n\n//         {gallery.length > 0 && (\n//           <ImageGallery\n//             gallery={gallery}\n//             onOpenPicture={this.handleOpenPicture}\n//           />\n//         )}\n\n//         {showLoader && <Loader />}\n\n//         {gallery.length > 0 && !showLoader && showLoadMore && (\n//           <Button onLoadMore={this.fetchGallary} />\n//         )}\n\n//         {showModal && (\n//           <Modal onClose={this.toggleModal}>\n//             <img src={largeImage.largeImageURL} alt={largeImage.tags} />\n//           </Modal>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}